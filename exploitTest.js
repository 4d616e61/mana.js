//test if fl and dt can be enabled at the same time

const { UI } = require("./onetap");

const indics_path = ["Visuals","SUBTAB_MGR","Other Indicators","SHEET_MGR","Other Indicators"];
UI.AddSubTab(["Visuals", "SUBTAB_MGR"], "Other Indicators");
UI.AddSliderInt(indics_path,"Number Of Cached Values",1,16);
UI.AddSliderInt(indics_path,"FL History x",0,3840);
UI.AddSliderInt(indics_path,"FL History y",0,2160);
UI.AddSliderInt(indics_path,"FL History Text Size",1,32);
UI.AddColorPicker(indics_path,"FL History Color");

//fl history indicator thing
var fakelagHistoryCache = [0,0,0,0];
var chokedTicksCache = 0;
var cachedHistoriesVal = 0;
var cachedHistoriesCache = 0;

function renderflHistory()
{
    var font = Render.GetFont("calibri.ttf", UI.GetValue(indics_path.concat("FL History Text Size")), false)
    cachedHistoriesCache = UI.GetValue(indics_path.concat("Number Of Cached Values"));
    if(cachedHistoriesVal != cachedHistoriesCache)
    {
        cachedHistoriesCache = cachedHistoriesVal;
        for(i = 0;i < fakelagHistoryVal;i++)
        {
            fakelagHistoryCache.push(0)
        }
    }
    currentChokedTicks = Globals.ChokedCommands();
    //if choked ticks is increasing(still fling)
    if(currentChokedTicks >= chokedTicksCache)
    {
        chokedTicksCache = currentChokedTicks;
    }
    //if choked ticks dropped(no longer fling)
    else
    {
        fakelagHistoryCache.shift();
        fakelagHistoryCache.push(chokedTicksCache);
        //resets choked ticks
        chokedTicksCache = 0;
    }
    resultString = ""
    for(i=0;i < fakelagHistoryCache.length;i++)
    {
        resultString += fakelagHistoryCache[i]
        if(i < fakelagHistoryCache.length-1)
        {
            resultString += ">>"
        }
    }
    Render.String(UI.GetValue(indics_path.concat("FL History x")),UI.GetValue(indics_path.concat("FL History y")), 0, resultString, UI.GetColor(indics_path.concat("FL History Color")), font)
}




